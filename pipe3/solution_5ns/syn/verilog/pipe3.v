// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4.op
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="pipe3,hls_ip_2017_4_op,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcvu9p-fsgd2104-3-e-es1,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=3.388000,HLS_SYN_LAT=0,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=3,HLS_SYN_FF=0,HLS_SYN_LUT=84}" *)

module pipe3 (
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        a,
        b,
        out_r,
        out_r_ap_vld
);


input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] a;
input  [31:0] b;
output  [31:0] out_r;
output   out_r_ap_vld;

reg out_r_ap_vld;

wire  signed [31:0] tmp_fu_35_p0;
wire  signed [31:0] tmp_fu_35_p1;
wire   [31:0] tmp_fu_35_p2;
wire  signed [31:0] tmp1_fu_41_p1;
wire   [31:0] tmp1_fu_41_p2;
wire  signed [31:0] tmp_2_fu_47_p1;

always @ (*) begin
    if ((ap_start == 1'b1)) begin
        out_r_ap_vld = 1'b1;
    end else begin
        out_r_ap_vld = 1'b0;
    end
end

assign ap_done = ap_start;

assign ap_idle = 1'b1;

assign ap_ready = ap_start;

assign out_r = ($signed(tmp1_fu_41_p2) + $signed(tmp_2_fu_47_p1));

assign tmp1_fu_41_p1 = a;

assign tmp1_fu_41_p2 = ($signed(tmp_fu_35_p2) + $signed(tmp1_fu_41_p1));

assign tmp_2_fu_47_p1 = b;

assign tmp_fu_35_p0 = b;

assign tmp_fu_35_p1 = a;

assign tmp_fu_35_p2 = ($signed(tmp_fu_35_p0) * $signed(tmp_fu_35_p1));

endmodule //pipe3
