// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _loop_functions_HH_
#define _loop_functions_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "sub_func.h"

namespace ap_rtl {

struct loop_functions : public sc_module {
    // Port declarations 22
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<5> > A_address0;
    sc_out< sc_logic > A_ce0;
    sc_in< sc_lv<8> > A_q0;
    sc_out< sc_lv<5> > B_address0;
    sc_out< sc_logic > B_ce0;
    sc_in< sc_lv<8> > B_q0;
    sc_out< sc_lv<5> > X_address0;
    sc_out< sc_logic > X_ce0;
    sc_out< sc_logic > X_we0;
    sc_out< sc_lv<13> > X_d0;
    sc_out< sc_lv<5> > Y_address0;
    sc_out< sc_logic > Y_ce0;
    sc_out< sc_logic > Y_we0;
    sc_out< sc_lv<13> > Y_d0;
    sc_in< sc_lv<5> > xlimit;
    sc_in< sc_lv<5> > ylimit;


    // Module declarations
    loop_functions(sc_module_name name);
    SC_HAS_PROCESS(loop_functions);

    ~loop_functions();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    sub_func* grp_sub_func_fu_34;
    sub_func* grp_sub_func_fu_44;
    sc_signal< sc_lv<2> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > grp_sub_func_fu_34_ap_start;
    sc_signal< sc_logic > grp_sub_func_fu_34_ap_done;
    sc_signal< sc_logic > grp_sub_func_fu_34_ap_idle;
    sc_signal< sc_logic > grp_sub_func_fu_34_ap_ready;
    sc_signal< sc_lv<5> > grp_sub_func_fu_34_I_address0;
    sc_signal< sc_logic > grp_sub_func_fu_34_I_ce0;
    sc_signal< sc_lv<5> > grp_sub_func_fu_34_O_address0;
    sc_signal< sc_logic > grp_sub_func_fu_34_O_ce0;
    sc_signal< sc_logic > grp_sub_func_fu_34_O_we0;
    sc_signal< sc_lv<13> > grp_sub_func_fu_34_O_d0;
    sc_signal< sc_logic > grp_sub_func_fu_44_ap_start;
    sc_signal< sc_logic > grp_sub_func_fu_44_ap_done;
    sc_signal< sc_logic > grp_sub_func_fu_44_ap_idle;
    sc_signal< sc_logic > grp_sub_func_fu_44_ap_ready;
    sc_signal< sc_lv<5> > grp_sub_func_fu_44_I_address0;
    sc_signal< sc_logic > grp_sub_func_fu_44_I_ce0;
    sc_signal< sc_lv<5> > grp_sub_func_fu_44_O_address0;
    sc_signal< sc_logic > grp_sub_func_fu_44_O_ce0;
    sc_signal< sc_logic > grp_sub_func_fu_44_O_we0;
    sc_signal< sc_lv<13> > grp_sub_func_fu_44_O_d0;
    sc_signal< sc_logic > ap_reg_grp_sub_func_fu_34_ap_start;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_logic > ap_reg_grp_sub_func_fu_44_ap_start;
    sc_signal< bool > ap_block_state2_on_subcall_done;
    sc_signal< sc_lv<2> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<2> ap_ST_fsm_state1;
    static const sc_lv<2> ap_ST_fsm_state2;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const bool ap_const_boolean_0;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_A_address0();
    void thread_A_ce0();
    void thread_B_address0();
    void thread_B_ce0();
    void thread_X_address0();
    void thread_X_ce0();
    void thread_X_d0();
    void thread_X_we0();
    void thread_Y_address0();
    void thread_Y_ce0();
    void thread_Y_d0();
    void thread_Y_we0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_block_state2_on_subcall_done();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_grp_sub_func_fu_34_ap_start();
    void thread_grp_sub_func_fu_44_ap_start();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
